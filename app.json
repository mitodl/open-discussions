{
  "addons": [
    "heroku-postgresql:hobby-dev",
    "newrelic:wayne",
    "rediscloud:30"
  ],
  "buildpacks": [
    {
      "url": "https://github.com/heroku/heroku-buildpack-nodejs"
    },
    {
      "url": "https://github.com/heroku/heroku-buildpack-python"
    },
    {
      "url": "https://github.com/heroku/heroku-buildpack-pgbouncer"
    },
    {
      "url": "https://github.com/heroku/heroku-buildpack-nginx"
    },
    {
      "url": "https://github.com/heroku/heroku-buildpack-apt"
    }
  ],
  "description": "open-discussions",
  "env": {
    "AWS_ACCESS_KEY_ID": {
      "description": "AWS Access Key for S3 storage.",
      "required": false
    },
    "AWS_SECRET_ACCESS_KEY": {
      "description": "AWS Secret Key for S3 storage.",
      "required": false
    },
    "AWS_STORAGE_BUCKET_NAME": {
      "description": "S3 Bucket name.",
      "required": false
    },
    "CLOUDFRONT_DIST": {
      "description": "Cloudfront distribution",
      "required": false
    },
    "ELASTICSEARCH_HTTP_AUTH": {
      "description": "Basic auth settings for connecting to Elasticsearch"
    },
    "ELASTICSEARCH_INDEX": {
      "description": "Index to use on Elasticsearch"
    },
    "ELASTICSEARCH_URL": {
      "description": "URL for connecting to Elasticsearch cluster"
    },
    "GA_TRACKING_ID": {
      "description": "Google analytics tracking ID",
      "required": false
    },
    "MAILGUN_URL": {
      "description": "The URL for communicating with Mailgun"
    },
    "MAILGUN_KEY": {
      "description": "The token for authenticating against the Mailgun API"
    },
    "MAILGUN_FROM_EMAIL": {
      "description": "Email which mail comes from"
    },
    "MAILGUN_BCC_TO_EMAIL": {
      "description": "Email address used with bcc email",
      "required": false
    },
    "OPEN_DISCUSSIONS_ADMIN_EMAIL": {
      "description": "E-mail to send 500 reports to."
    },
    "OPEN_DISCUSSIONS_BASE_URL": {
      "description": "Base url to link users to in emails"
    },
    "OPEN_DISCUSSIONS_CHANNEL_POST_LIMIT": {
      "description": "Number of posts to display on the frontpage and channels",
      "required": false
    },
    "OPEN_DISCUSSIONS_COOKIE_NAME": {
      "description": "Name of the cookie for the JWT auth token"
    },
    "OPEN_DISCUSSIONS_DEFAULT_SITE_KEY": {
      "description": "The default site key to use for JWT tokens missing one"
    },
    "OPEN_DISCUSSIONS_DB_CONN_MAX_AGE": {
      "value": "0"
    },
    "OPEN_DISCUSSIONS_DB_DISABLE_SSL": {
      "value": "True"
    },
    "OPEN_DISCUSSIONS_EMAIL_HOST": {
      "description": "Outgoing e-mail settings"
    },
    "OPEN_DISCUSSIONS_EMAIL_PASSWORD": {
      "description": "Outgoing e-mail settings"
    },
    "OPEN_DISCUSSIONS_EMAIL_PORT": {
      "description": "Outgoing e-mail settings",
      "value": "587"
    },
    "OPEN_DISCUSSIONS_EMAIL_TLS": {
      "description": "Outgoing e-mail settings",
      "value": "True"
    },
    "OPEN_DISCUSSIONS_EMAIL_USER": {
      "description": "Outgoing e-mail settings"
    },
    "OPEN_DISCUSSIONS_ENVIRONMENT": {
      "description": "The execution environment that the app is in (e.g. dev, staging, prod)"
    },
    "OPEN_DISCUSSIONS_FROM_EMAIL": {
      "description": "E-mail to use for the from field"
    },
    "OPEN_DISCUSSIONS_LOG_LEVEL": {
      "description": "The log level for the application",
      "required": true,
      "value": "INFO"
    },
    "OPEN_DISCUSSIONS_JWT_SECRET": {
      "description": "Shared secret for JWT auth tokens",
      "required": true
    },
    "OPEN_DISCUSSIONS_MAX_COMMENT_DEPTH": {
      "description": "Maximum depth of a comment",
      "required": false
    },
    "OPEN_DISCUSSIONS_REDDIT_ACCESS_TOKEN": {
      "description": "Access token for securing trusted APIs to reddit",
      "required": false
    },
    "OPEN_DISCUSSIONS_REDDIT_CLIENT_ID": {
      "description": "OAuth client ID for authentication with reddit",
      "required": true
    },
    "OPEN_DISCUSSIONS_REDDIT_SECRET": {
      "description": "OAuth secret for authentication with reddit",
      "required": true
    },
    "OPEN_DISCUSSIONS_REDDIT_URL": {
      "description": "URL including protocol to reddit host (e.g. https://reddit.local)",
      "required": true
    },
    "OPEN_DISCUSSIONS_REDDIT_VALIDATE_SSL": {
      "description": "If false, disables validation of Reddit's SSL certificate"
    },
    "OPEN_DISCUSSIONS_SECURE_SSL_REDIRECT": {
      "description": "Application-level SSL redirect setting.",
      "value": "True"
    },
    "OPEN_DISCUSSIONS_SUPPORT_EMAIL": {
      "description": "Email address listed for customer support"
    },
    "OPEN_DISCUSSIONS_UNSUBSCRIBE_TOKEN_MAX_AGE_SECONDS": {
      "description": "Maximum age of unsubscribe tokens in seconds",
      "required": false
    },
    "OPEN_DISCUSSIONS_USE_S3": {
      "description": "Use S3 for storage backend (required on Heroku)",
      "value": "False"
    },
    "NEW_RELIC_APP_NAME": {
      "description": "Application identifier in New Relic."
    },
    "NODE_MODULES_CACHE": {
      "description": "If false, disables the node_modules cache to fix yarn install",
      "value": "false"
    },
    "PGBOUNCER_DEFAULT_POOL_SIZE": {
      "value": "50"
    },
    "PGBOUNCER_MIN_POOL_SIZE": {
      "value": "5"
    },
    "SOCIAL_AUTH_SAML_LOGIN_URL": {
      "description": "Custom login url for SAML",
      "required": false
    },
    "SOCIAL_AUTH_SAML_SP_ENTITY_ID" : {
      "description": "SAML Service Provider Entity ID",
      "required": false
    },
    "SOCIAL_AUTH_SAML_SP_PUBLIC_CERT": {
      "description": "SAML Service Provider x509 public certificate string",
      "required": false
    },
    "SOCIAL_AUTH_SAML_SP_PRIVATE_KEY": {
      "description": "SAML Service Provider x509 private key",
      "required": false
    },
    "SOCIAL_AUTH_SAML_ORG_DISPLAYNAME": {
      "description": "SAML Service Provider organization display name",
      "required": false
    },
    "SOCIAL_AUTH_SAML_CONTACT_NAME": {
      "description": "SAML Service Provider technical/support contact name",
      "required": false
    },
    "SOCIAL_AUTH_SAML_IDP_ENTITY_ID": {
      "description": "SAML Identity Provider EntityID",
      "required": false
    },
    "SOCIAL_AUTH_SAML_IDP_URL": {
      "description": "SAML Identity Provider Http-Redirect URL",
      "required": false
    },
    "SOCIAL_AUTH_SAML_IDP_X509": {
      "description": "SAML Identity Provider X509 certificate string",
      "required": false
    },
    "SOCIAL_AUTH_SAML_IDP_ATTRIBUTE_PERM_ID": {
      "description": "SAML Identity Provider attribute for user permanent id",
      "required": false
    },
    "SOCIAL_AUTH_SAML_IDP_ATTRIBUTE_NAME": {
      "description": "SAML Identity Provider attribute for user name",
      "required": false
    },
    "SOCIAL_AUTH_SAML_IDP_ATTRIBUTE_EMAIL": {
      "description": "SAML Identity Provider attribute for user email",
      "required": false
    },
    "SECRET_KEY": {
      "description": "Django secret key.",
      "generator": "secret"
    },
    "SENTRY_DSN": {
      "description": "The connection settings for Sentry"
    },
    "SENTRY_LOG_LEVEL": {
      "description": "The log level for Sentry",
      "required": false
    },
    "STATUS_TOKEN": {
      "description": "Token to access the status API."
    }
  },
  "keywords": [
    "Django",
    "Python",
    "MIT",
    "Office of Digital Learning"
  ],
  "name": "open_discussions",
  "repository": "https://github.com/mitodl/mit-open",
  "scripts": {
    "postdeploy": "./manage.py migrate --noinput"
  },
  "success_url": "/",
  "website": "https://github.com/mitodl/mit-open"
}
