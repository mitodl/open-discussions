version: '3.7'

x-environment:
  &py-environment
  DEBUG: 'False'
  DEV_ENV: 'True'  # necessary to have nginx connect to web container
  NODE_ENV: 'production'
  DATABASE_URL: postgres://postgres@db:5432/postgres
  OPEN_DISCUSSIONS_SECURE_SSL_REDIRECT: 'False'
  OPEN_DISCUSSIONS_DB_DISABLE_SSL: 'True'
  OPEN_DISCUSSIONS_REDDIT_URL: https://reddit.local
  OPEN_DISCUSSIONS_REDDIT_VALIDATE_SSL: 'False'
  OPEN_DISCUSSIONS_REDDIT_CLIENT_ID: od_client_id
  OPEN_DISCUSSIONS_REDDIT_SECRET: od_client_secret
  OPEN_DISCUSSIONS_FEATURES_DEFAULT: 'True'
  OPENSEARCH_URL: elastic:9200
  CELERY_TASK_ALWAYS_EAGER: 'False'
  CELERY_BROKER_URL: redis://redis:6379/4
  CELERY_RESULT_BACKEND: redis://redis:6379/4
  DOCKER_HOST: ${DOCKER_HOST:-missing}

  TIKA_SERVER_ENDPOINT: ${TIKA_SERVER_ENDPOINT:-http://tika:9998/}
  TIKA_CLIENT_ONLY: 'True'
  AKISMET_IS_TESTING: 'True'
x-extra-hosts:
  &default-extra-hosts
  # see reddit.local in /etc/hosts
  - "reddit.local:192.168.56.111"

services:
  db:
    image: postgres:11.6
    ports:
      - 5432:5432

  redis:
    image: redis:5.0.8
    ports:
      - "6379"

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    environment:
      - network.host=0.0.0.0
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - http.max_content_length=10mb
      - rest.action.multi.allow_explicit_index=false
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
      - discovery.type=single-node
    ports:
      - 9101:9200

  nginx:
    image: nginx:1.9.5
    ports:
      - "8063:8063"
    links:
      - web

  web:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      << : *py-environment
      PORT: 8061
    env_file: .env
    command: ./scripts/run-django-dev.sh
    stdin_open: true
    tty: true
    ports:
      - "8061:8061"
    links:
      - db
      - elastic
      - redis
      - watch
    extra_hosts: *default-extra-hosts

  watch:
    image: node:16.15.1
    working_dir: /src
    command: ./scripts/run-watch-dev.sh
    ports:
      - "8052:8052"
      - "8062:8062"
      - "8072:8072"
    environment:
      DOCKER_HOST: ${DOCKER_HOST:-missing}
      CONTAINER_NAME: 'watch'
      WEBPACK_PORT_OPEN_DISCUSSIONS: 8062
      WEBPACK_PORT_INFINITE_CORRIDOR: 8072
    env_file: .env
    volumes:
      - .:/src

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    environment: *py-environment
    env_file: .env
    command: >
      /bin/bash -c '
      sleep 3;
      celery -A open_discussions.celery:app worker -Q spam,digest_emails,default -B -l ${OPEN_DISCUSSIONS_LOG_LEVEL:-INFO} &
      celery -A open_discussions.celery:app worker -Q spam,digest_emails,edx_content,default -l ${OPEN_DISCUSSIONS_LOG_LEVEL:-INFO}'
    links:
      - db
      - redis
    extra_hosts: *default-extra-hosts

  tika:
    image: apache/tika:1.23
    entrypoint: java -jar tika-server-1.23.jar -h 0.0.0.0 -spawnChild
    ports:
      - "9998:9998"
