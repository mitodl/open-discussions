# Generated by Django 2.2.10 on 2020-04-10 20:42

import bitfield.models
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import imagekit.models.fields
import open_discussions.utils
import profiles.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0011_update_proxy_permissions"),
        ("widgets", "0002_remove_text"),
    ]

    operations = [
        migrations.CreateModel(
            name="Channel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(default=open_discussions.utils.now_in_utc),
                ),
                (
                    "updated_on",
                    models.DateTimeField(default=open_discussions.utils.now_in_utc),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Channel name can only contain the characters: A-Z, a-z, 0-9, _",
                                regex="^[A-Za-z0-9_]+$",
                            )
                        ],
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("public_description", models.CharField(default="", max_length=80)),
                ("membership_is_managed", models.BooleanField(default=False)),
                (
                    "allowed_post_types",
                    bitfield.models.BitField(
                        [("link", "Link"), ("text", "Text"), ("article", "Article")],
                        default=None,
                    ),
                ),
                (
                    "channel_type",
                    models.CharField(
                        choices=[
                            ("public", "Public"),
                            ("private", "Private"),
                            ("restricted", "Restricted"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "avatar",
                    imagekit.models.fields.ProcessedImageField(
                        max_length=2083, null=True, upload_to=profiles.utils.avatar_uri
                    ),
                ),
                (
                    "banner",
                    imagekit.models.fields.ProcessedImageField(
                        max_length=2083, null=True, upload_to=profiles.utils.banner_uri
                    ),
                ),
                (
                    "about",
                    django.contrib.postgres.fields.jsonb.JSONField(
                        blank=True, null=True
                    ),
                ),
                (
                    "ga_tracking_id",
                    models.CharField(blank=True, max_length=24, null=True),
                ),
                (
                    "contributor_group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="contributors_of",
                        to="auth.Group",
                    ),
                ),
                (
                    "moderator_group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="moderators_of",
                        to="auth.Group",
                    ),
                ),
                (
                    "widget_list",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="discussions_channel",
                        to="widgets.WidgetList",
                    ),
                ),
            ],
            options={"ordering": ("id",)},
        )
    ]
