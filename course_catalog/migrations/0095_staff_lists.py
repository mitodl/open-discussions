# Generated by Django 2.2.28 on 2023-03-13 14:48

import course_catalog.utils
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("contenttypes", "0002_remove_content_type_name"),
        ("course_catalog", "0094_staff_list_editors_group"),
    ]

    operations = [
        migrations.CreateModel(
            name="StaffList",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=256)),
                ("short_description", models.TextField(blank=True, null=True)),
                (
                    "image_description",
                    models.CharField(blank=True, max_length=1024, null=True),
                ),
                ("privacy_level", models.CharField(default="private", max_length=32)),
                ("list_type", models.CharField(max_length=128)),
                (
                    "image_src",
                    models.ImageField(
                        blank=True,
                        max_length=2083,
                        null=True,
                        upload_to=course_catalog.utils.staff_list_image_upload_uri,
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "offered_by",
                    models.ManyToManyField(
                        blank=True, to="course_catalog.LearningResourceOfferor"
                    ),
                ),
                (
                    "topics",
                    models.ManyToManyField(blank=True, to="course_catalog.CourseTopic"),
                ),
            ],
            options={
                "verbose_name": "stafflist",
            },
        ),
        migrations.AlterField(
            model_name="favoriteitem",
            name="content_type",
            field=models.ForeignKey(
                limit_choices_to={
                    "model__in": (
                        "course",
                        "stafflist",
                        "userlist",
                        "program",
                        "video",
                        "podcast",
                        "podcastepisode",
                    )
                },
                on_delete=django.db.models.deletion.CASCADE,
                to="contenttypes.ContentType",
            ),
        ),
        migrations.CreateModel(
            name="StaffListItem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("position", models.PositiveIntegerField()),
                ("object_id", models.PositiveIntegerField()),
                (
                    "content_type",
                    models.ForeignKey(
                        limit_choices_to={
                            "model__in": (
                                "course",
                                "program",
                                "video",
                                "podcast",
                                "podcastepisode",
                            )
                        },
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.ContentType",
                    ),
                ),
                (
                    "staff_list",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="course_catalog.StaffList",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
