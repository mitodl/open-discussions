# Generated by Django 2.1.7 on 2019-05-28 23:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion

from course_catalog.constants import PlatformType


class Migration(migrations.Migration):

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("course_catalog", "0022_course_location"),
    ]

    operations = [
        migrations.CreateModel(
            name="Bootcamp",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=256)),
                ("short_description", models.TextField(blank=True, null=True)),
                ("course_id", models.CharField(max_length=128, unique=True)),
                ("language", models.CharField(blank=True, max_length=128, null=True)),
                ("year", models.IntegerField(blank=True, null=True)),
                ("full_description", models.TextField(blank=True, null=True)),
                ("start_date", models.DateTimeField(blank=True, null=True)),
                ("end_date", models.DateTimeField(blank=True, null=True)),
                ("enrollment_start", models.DateTimeField(blank=True, null=True)),
                ("enrollment_end", models.DateTimeField(blank=True, null=True)),
                ("image_src", models.URLField(blank=True, max_length=400, null=True)),
                (
                    "image_description",
                    models.CharField(blank=True, max_length=1024, null=True),
                ),
                ("last_modified", models.DateTimeField(blank=True, null=True)),
                ("featured", models.BooleanField(default=False)),
                ("published", models.BooleanField(default=True)),
                (
                    "availability",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                ("url", models.URLField(max_length=2048, null=True)),
                (
                    "learning_resource_type",
                    models.CharField(default="course", max_length=20),
                ),
                ("location", models.CharField(blank=True, max_length=128, null=True)),
                (
                    "instructors",
                    models.ManyToManyField(
                        blank=True, to="course_catalog.CourseInstructor"
                    ),
                ),
                (
                    "prices",
                    models.ManyToManyField(blank=True, to="course_catalog.CoursePrice"),
                ),
                (
                    "topics",
                    models.ManyToManyField(blank=True, to="course_catalog.CourseTopic"),
                ),
            ],
            options={"abstract": False},
        ),
        migrations.CreateModel(
            name="LearningPath",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=256)),
                ("short_description", models.TextField(blank=True, null=True)),
                ("image_src", models.URLField(blank=True, max_length=400, null=True)),
                (
                    "image_description",
                    models.CharField(blank=True, max_length=1024, null=True),
                ),
                (
                    "privacy_level",
                    models.CharField(blank=True, max_length=32, null=True),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "topics",
                    models.ManyToManyField(blank=True, to="course_catalog.CourseTopic"),
                ),
            ],
            options={"abstract": False},
        ),
        migrations.CreateModel(
            name="LearningPathItem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("position", models.PositiveIntegerField()),
                ("object_id", models.PositiveIntegerField()),
                (
                    "content_type",
                    models.ForeignKey(
                        limit_choices_to={"model__in": ("Course", "Bootcamp")},
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.ContentType",
                    ),
                ),
                (
                    "learning_path",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="course_catalog.LearningPath",
                    ),
                ),
            ],
            options={"abstract": False},
        ),
        migrations.CreateModel(
            name="Program",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=256)),
                ("short_description", models.TextField(blank=True, null=True)),
                ("image_src", models.URLField(blank=True, max_length=400, null=True)),
                (
                    "image_description",
                    models.CharField(blank=True, max_length=1024, null=True),
                ),
                (
                    "topics",
                    models.ManyToManyField(blank=True, to="course_catalog.CourseTopic"),
                ),
            ],
            options={"abstract": False},
        ),
        migrations.CreateModel(
            name="ProgramItem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("position", models.PositiveIntegerField()),
                ("object_id", models.PositiveIntegerField()),
                (
                    "content_type",
                    models.ForeignKey(
                        limit_choices_to={"model__in": ("Course", "Bootcamp")},
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.ContentType",
                    ),
                ),
                (
                    "program",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="course_catalog.Program",
                    ),
                ),
            ],
            options={"abstract": False},
        ),
        migrations.RemoveField(model_name="course", name="location"),
        migrations.AlterField(
            model_name="course",
            name="prices",
            field=models.ManyToManyField(blank=True, to="course_catalog.CoursePrice"),
        ),
        migrations.AlterField(
            model_name="course",
            name="topics",
            field=models.ManyToManyField(blank=True, to="course_catalog.CourseTopic"),
        ),
    ]
